* Can you create a template class for StackMatrix?
	- how to default initialize a type T? Can std::function be default initialized?
* Can you separate all of the eta_x/y/z code into its own function?
* Try to figure out what is actually going on
	- Instead of doing recursive calls to the different eta_* functions, can
	  you instead just build up the polynomial coefficient values instead?
* Implement the faster version that is in the C++ Hartree Fock program
	- Is it actually faster?
* What happens if we change the epsilon from 1e-10 to 1e-15?
	- How much slower does it get?


* Parallelize all matrix calculations
	- Transform the workload into something that can be passed to a std:: 
	  parallel algorithm




Basis Sets
	* Support the following basis sets:
		- STO-3G, STO-6G, 6-31G, 6-31G* [aka 6-31G(d)], 6-31G** [aka 6-31G(d,p)]
	* Support all atoms up to Calcium (20)


Unit Tests
	* Right now, unit tests are just set up to make sure we align with the other
		C++ Hartree-Fock program. Ideally, we should assemble as many unit tests
		as we can where the values actually come from the literature (and therefore,
		we should track those citations). 
			- In thinking about it, I feel like such a set of data might already exist,
			  but if not, then it probably should be created.